window.NwsApi=(()=>{"use strict";var t={48:(t,e,r)=>{r.r(e),r.d(e,{Alert:()=>i,Forecast:()=>a,Product:()=>n,Zone:()=>l});class s{constructor(){}async retryFetch(t,e,r,s){try{let r=await fetch(t,e);if(r.ok)return r;throw new Error("Request to "+t+" failed: "+r.statusText)}catch(i){if(1===s)throw i;return await this.sleep(r),await this.retryFetch(t,e,r,s-1)}}async retryFetchAllJson(t,e,r,s){return await Promise.all(t.map((async t=>(await this.retryFetch(t,e,r,s)).json())))}async sleep(t){return new Promise((e=>setTimeout(e,t)))}buildGetUrl(t,e){let r=t+"?";for(let[t,s]of Object.entries(e))if(null!==s){let e=t,i="";i=Array.isArray(s)?s.join(","):s.toString(),r+="&"+e+"="+i}return r=encodeURI(r),r}}class i extends s{constructor(t,e){super(),this._queryUrl="https://api.weather.gov/alerts",this._requestRetryLimit=4,this._requestRetryTimeout=4e3,this._filters={active:null,start:null,end:null,status:null,message_type:null,event:null,code:null,region_type:null,point:null,region:null,area:null,zone:null,urgency:null,certainty:null,severity:null,limit:null,cursor:null,product:null,siteid:null,zone:null,county:null,latlon:null},this.returnObj={updated:null,features:null},this._filters=Object.assign(this._filters,t)}async getAll(t,...e){let r=this.buildGetUrl(this._queryUrl,this._filters);try{const t=await this.retryFetch(r,null,this._requestRetryTimeout,this._requestRetryLimit);let e=await t.json();this.returnObj.updated=new Date(e.updated),this.returnObj.features=e.features,this.returnObj.type=e.type}catch{console.error("NWS API Unavailable or Bad Request: "+r),this.returnObj=!1}if(!t)return this.returnObj;t(this.returnObj,...e)}}class a extends s{constructor(t,e){super(),this._baseUrl="https://api.weather.gov/",this._pointMetadataUrl="points/",this._gridpointsUrl="gridpoints/",this._fcstHourlyUrl="forecast/hourly",this._fcstSummaryUrl="forecast",this._requestRetryLimit=4,this._requestRetryTimeout=4e3,this._lat=t,this._lon=e,this._pointMetadata=null,this._rawForecast=null,this._summaryForecast=null,this._hourlyForecast=null}async getRawForecast(t,...e){if(this._rawForecast||await this.queryRawForecast(),!t)return this._rawForecast;t(this._rawForecast,...e)}async getHourlyForecast(t,...e){if(this._hourlyForecast||await this.queryHourlyForecast(),!t)return this._hourlyForecast;t(this._hourlyForecast,...e)}async getSummaryForecast(t,...e){if(this._summaryForecast||await this.querySummaryForecast(),!t)return this._summaryForecast;t(this._summaryForecast,...e)}async getForecasts(t,e,...r){let s={};if(t.includes("raw")&&(s.raw=await this.getRawForecast()),t.includes("hourly")&&(s.hourly=await this.getHourlyForecast()),t.includes("summary")&&(s.summary=await this.getSummaryForecast()),!e)return s;e(s,...r)}async getMetaData(){return this._pointMetadata||await this.queryPointMetadata(),this._pointMetadata}get gridX(){return this._pointMetadata.properties.gridX}get gridY(){return this._pointMetadata.properties.gridY}get cwa(){return this._pointMetadata.properties.cwa}async queryPointMetadata(){var t=this._baseUrl+this._pointMetadataUrl+this._lat+","+this._lon;try{const e=await this.retryFetch(t,null,this._requestRetryTimeout,this._requestRetryLimit);this._pointMetadata=await e.json()}catch{throw new Error(`Unable to load API Metadata from ${t}`)}}async queryRawForecast(t,...e){this._pointMetadata||await this.queryPointMetadata();try{var r=this._baseUrl+this._gridpointsUrl+this.cwa+"/"+this.gridX+","+this.gridY;const t=await this.retryFetch(r,null,this._requestRetryTimeout,this._requestRetryLimit);this._rawForecast=await t.json()}catch{throw new Error(`Unable to load Raw Forecast from ${r}`)}}async queryHourlyForecast(t,...e){this._pointMetadata||await this.queryPointMetadata();try{var r=this._baseUrl+this._gridpointsUrl+this.cwa+"/"+this.gridX+","+this.gridY+"/"+this._fcstHourlyUrl;const t=await this.retryFetch(r,null,this._requestRetryTimeout,this._requestRetryLimit),e=await t.json();this._hourlyForecast=e}catch{throw new Error(`Unable to load Hourly Forecast from ${r}`)}}async querySummaryForecast(t,...e){this._pointMetadata||await this.queryPointMetadata();try{var r=this._baseUrl+this._gridpointsUrl+this.cwa+"/"+this.gridX+","+this.gridY+"/"+this._fcstSummaryUrl;const t=await this.retryFetch(r,null,this._requestRetryTimeout,this._requestRetryLimit),e=await t.json();this._summaryForecast=e}catch{throw new Error(`Unable to load Summary Forecast from ${r}`)}}async getRawWeatherDataBetweenPeriods(t,e,r){this._rawForecast||await this.getRawForecast();let s=this._rawForecast.properties[t].values,i=[],a=[],l=!1;return"quantitativePrecipitation"==t&&(l="split"),s.forEach((t=>{i=i.concat(this.hourlyForecastFromRaw(t,l))})),a=i.filter((t=>{if(t.startDate>=e&&t.endDate<=r)return!0})),a}}class l extends s{constructor(t,e,r){if(super(),this._queryUrl="https://api.weather.gov/zones",this._zoneType=t,this._requestRetryLimit=4,this._requestRetryTimeout=4e3,this._filters={id:null,area:null,region:null,point:null,include_geometry:null,limit:null,effective:null},this.returnObj={updated:null,features:null,type:null},this._filters=Object.assign(this._filters,e),this._allowableZoneTypes=["land","marine","forecast","public","coastal","offshore","fire","county"],!this._allowableZoneTypes.includes(this._zoneType))throw new Error(`Zone type '${this._zoneType}' not valid.  Appropriate values are (${this._allowableZoneTypes.join("|")})`)}async getAll(t,...e){let r=this._queryUrl+"/"+this._zoneType,s=this.buildGetUrl(r,this._filters);try{const t=await this.retryFetch(s,null,this._requestRetryTimeout,this._requestRetryLimit);let e=await t.json();this.returnObj.updated=new Date(e.updated),this.returnObj.features=e.features,this.returnObj.type=e.type}catch{console.error("NWS API Unavailable or Bad Request: "+s),this.returnObj=!1}if(!t)return this.returnObj;t(this.returnObj,...e)}}class n extends s{constructor(t,e){super(),this._queryUrl="https://api.weather.gov/products",this._requestRetryLimit=4,this._requestRetryTimeout=1e3,this._getAllLimit=25,this._filters={location:null,start:null,end:null,office:null,wmoid:null,type:null,limit:null},this._productListing=!1,this.returnObj={updated:null,features:null},this._filters=Object.assign(this._filters,t)}async getFullProductListing(){let t=this.buildGetUrl(this._queryUrl,this._filters);try{const e=await this.retryFetch(t,null,this._requestRetryTimeout,this._requestRetryLimit);let r=await e.json();return this._productListing=r["@graph"],this._productListing}catch{throw new Error("NWS API Unavailable or Bad Request: "+t)}}async getAll(t,...e){let r=[];r=this._productListing?this._productListing:await this.getFullProductListing(),this._filters.limit||(r=r.slice(0,this._getAllLimit));let s=await this.getProductsFulltext(r);if(!t)return s;t(s,...e)}async getProductsFulltext(t){let e=[];if(0!==t.length){let r=t.map((t=>t["@id"]));e=await this.retryFetchAllJson(r,null,this._requestRetryTimeout,this._requestRetryLimit)}return e}}}},e={};function r(s){if(e[s])return e[s].exports;var i=e[s]={exports:{}};return t[s](i,i.exports,r),i.exports}return r.d=(t,e)=>{for(var s in e)r.o(e,s)&&!r.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r(48)})();